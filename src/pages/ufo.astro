<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>UFO Animation</title>
    <style>
    body {
        margin: 0;
        height: 100vh;
        background: radial-gradient(circle, #000428, #004e92);
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: crosshair;
    }
        .ufo {
            position: absolute;
            width: 75px;
            height: 25px;
            background: linear-gradient(to right, #bbb, #eee);
            border-radius: 50%;
            box-shadow: 0 0 20px 5px rgba(255, 255, 255, 0.7);
            transform-origin: center center;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%) perspective(800px);
            transition: transform 0.1s linear;
            overflow: hidden;
        }

        .ufo-top {
            position: absolute;
            top: -20px;
            left: 50%;
            transform: translateX(-50%);
            width: 20px;
            height: 30px;
            background: linear-gradient(to top, #999, #fff);
            border-radius: 50%;
            box-shadow: 0 0 15px 3px rgba(255, 255, 255, 0.7);
        }

        .ufo::before {
            content: '';
            position: absolute;
            top: -25px;
            left: 50%;
            transform: translateX(-50%);
            background: linear-gradient(to top, rgba(200, 200, 200, 0.9), rgba(255, 255, 255, 0.8));
            border-radius: 50%;
            box-shadow: 0 0 10px 2px rgba(255, 255, 255, 0.5);
        }

        .beam {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translateX(-50%) scaleY(0);
            width: 120px;
            height: 300px;
            background: radial-gradient(circle at center, rgba(255, 255, 204, 0.5), rgba(255, 255, 204, 0) 70%);
            clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
            animation: beam-flicker 3s infinite;
        }

        @keyframes beam-flicker {
            0%, 100% {
                transform: translateX(-50%) scaleY(0);
                opacity: 0.7;
            }
            50% {
                transform: translateX(-50%) scaleY(1);
                opacity: 1;
            }
        }

        .ufo-body {
            position: absolute;
            width: 75px;
            height: 25px;
            background: linear-gradient(135deg, #888, #bbb);
            border-radius: 50%;
            animation: rotate-body 1.5s linear infinite;
            z-index: -1;
        }

        @keyframes rotate-body {
            0% {
                background: linear-gradient(135deg, #888, #bbb);
            }
            50% {
                background: linear-gradient(225deg, #bbb, #888);
            }
            100% {
                background: linear-gradient(135deg, #888, #bbb);
            }
        }

        .laser-projectile {
            position: absolute;
            width: 5px;
            height: 15px;
            box-shadow: 0 0 10px red;
            border-radius: 50%;
            pointer-events: none;
            background-color:red;
            z-index:-12;
        }
    </style>
</head>
<body>
    <div id="space" class="w-full h-full  ">
        <div class="ufo">
            <div class="ufo-top"></div>
            <div class="beam"></div>
            <div class="ufo-body"></div>
        </div>
    </div>


    <script>
        const ufo = document.querySelector('.ufo');
        let mouseX = window.innerWidth / 2;
        let mouseY = window.innerHeight / 2;

        document.addEventListener('mousemove', (e) => {
            mouseX = e.clientX;
            mouseY = e.clientY;
        });

        function moveUFO() {
            const rect = ufo.getBoundingClientRect();
            const ufoX = rect.left + rect.width / 2;
            const ufoY = rect.top + rect.height / 2;

            const deltaX = mouseX - ufoX;
            const deltaY = mouseY - ufoY;

            const distance = Math.sqrt(deltaX ** 2 + deltaY ** 2);
            const speed = Math.min(distance * 0.01, 30); // Speed increases with distance, capped at 30px per frame

            const moveX = deltaX * speed / distance || 0;
            const moveY = deltaY * speed / distance || 0;

            const angleX = Math.min(deltaY / 15, 20); // Max tilt of 20 degrees for vertical movement
            const angleY = Math.min(deltaX / 15, 20); // Max tilt of 20 degrees for horizontal movement

            const perspectiveShiftX = deltaX / 40; // Simulate perspective shift horizontally
            const perspectiveShiftY = deltaY / 40; // Simulate perspective shift vertically

            const currentLeft = parseFloat(getComputedStyle(ufo).left);
            const currentTop = parseFloat(getComputedStyle(ufo).top);

            ufo.style.left = `${currentLeft + moveX}px`;
            ufo.style.top = `${currentTop + moveY}px`;

            // Update rotation and perspective for 3D effect
            ufo.style.transform = `translate(-50%, -50%) perspective(800px) rotateX(${-perspectiveShiftY}deg) rotateY(${perspectiveShiftX}deg) skewX(${-angleY}deg) skewY(${angleX}deg)`;

            requestAnimationFrame(moveUFO);
        }

        function shootLaser(e) {
            const laser = document.createElement('div');
            laser.classList.add('laser-projectile');
            // const space = document.getElementById('space');
            const space =  document.documentElement;
            space.appendChild(laser);

            const rect = ufo.getBoundingClientRect();
            const ufoX = rect.left + rect.width / 2;
            const ufoY = rect.top + rect.height / 2;

            laser.style.left = `${ufoX}px`;
            laser.style.top = `${ufoY}px`;
            laser.style.position= "absolute";
            laser.style.width= "15px";
            laser.style.height= "3px";
            laser.style.background= "red";
            laser.style.boxShadow= "0 0 10px red";
            laser.style.borderRadius= "50%";
            laser.style.pointerEvents= "none";
            // laser.style.backgroundColor="red";
            laser.style.zIndex= -1;
            laser.style.boxShadow= "0 0 10px 5px #7293ff, inset 0 0 5px #7293ff";

            laser.classList.add('bg-red-700');
            // laser.style.z-index:100;


            const deltaX = e.clientX - ufoX;
            const deltaY = e.clientY - ufoY;

            const angle = Math.atan2(deltaY, deltaX);


            const screenWidth = window.innerWidth;
            const screenHeight = window.innerHeight;

            // Calculate farthest point in direction of mouse
            const distanceToEdge = Math.max(screenWidth, screenHeight);
            const endX = Math.cos(angle) * distanceToEdge;
            const endY = Math.sin(angle) * distanceToEdge;

            laser.style.transform = `rotate(${angle}rad)`;

            const distance = Math.sqrt(deltaX ** 2 + deltaY ** 2);

            const animation = laser.animate([
                { transform: `translate(0, 0) rotate(${angle}rad)` },
                { transform: `translate(${endX}px, ${endY}px) rotate(${angle}rad)` }
            ], {
                duration: distance/1 ,
                easing: 'linear'
            });

            animation.onfinish = () => {
                laser.remove();
            };
        }

        document.addEventListener('mousedown', (e) => {
            if (e.button === 0) {
                shootLaser(e);
            }
        });

        moveUFO();
    </script>
</body>
</html>
